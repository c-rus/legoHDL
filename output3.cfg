; ------------------------------------------------------------------------------
; FILE: legohdl.cfg
; DESCRIPTION:
; A properties file to configure the package manager and development tool,
; legoHDL.
; HELP:
; For more information on how to edit this file, read the documentation at 
; ___.
; ------------------------------------------------------------------------------

; --- general settings --- 
; DESCRIPTION:
; Various assignments related to the tool in general.
[general]

    ; DESCRIPTION:
    ; A workspace from the 'workspace' section to be in current use. If an empty
    ; assignment, a lot of functionality will be unavailable.
    ; VALUE:
    ; <workspace>
    active-workspace = 

    ; DESCRIPTION:
    ; Your name. It can be accessed as one of the default placeholders using
    ; %AUTHOR%.
    ; VALUE:
    ; <name>
    author           = 

    ; DESCRIPTION:
    ; The path from where to copy a template folder for creating a new block
    ; project. If an empty assignment, it will use the built-in template folder.
    ; VALUE:
    ; <path>
    template         = 

    ; DESCRIPTION:
    ; A list of profiles to import settings, templates, and/or plugins. Profiles
    ; are stored in the built-in profiles folder.
    profiles         = 

    ; DESCRIPTION:
    ; When enabled, instantiated units found in code will be checked across
    ; languages VHDL and Verilog. When disabled, determining what component is
    ; instantiated is filtered to only search through units written in the same 
    ; language.
    ; VALUE:
    ; 'on' or 'off'
    mixed-language   = 

    ; DESCRIPTION:
    ; When enabled, it will reference blocks found in the workspace path over
    ; blocks found in the cache. This is beneficial for simulataneously working 
    ; on multiple related blocks. When disabled, it will only allow blocks to be
    ; used from the cache. Write 'on' to enable or 'off' to disable.
    ; VALUE:
    ; 'on' or 'off'
    multi-develop    = 

    ; DESCRIPTION:
    ; How often to synchronize vendors with their remote every day. Set to -1 to
    ; refresh on every call to legoHDL. Maximum accepted value is 1440 (every
    ; minute). Evenly divides the refresh points throughout the 24-hour day.
    ; This settings is the automation of the 'refresh' command.
    ; VALUE:
    ; -1 to 1440
    refresh-rate     = 

    ; DESCRIPTION:
    ; depreciated
    overlap-global   = 

    ; DESCRIPTION:
    ; The command to call your preferred text editor.
    ; VALUE:
    ; <command>
    editor           = 

; --- label settings --- 
; DESCRIPTION:
; User-defined groupings of filetypes to be collected and written to the
; blueprint file during export. Labels help bridge a custom workflow with any
; plugin by adding support for additional files.
[label]

    ; --- label.local settings --- 
    ; DESCRIPTION:
    ; Find these files only throughout the current block.
    ; KEYS:
    ; <label> = <file-extension>s
    [.local]
        BOARD-DESIGN = *.bdf

    ; --- label.global settings --- 
    ; DESCRIPTION:
    ; Find these files throughout all blocks used in the current design.
    ; KEYS:
    ; <label> = <file-extension>
    [.global]

; --- plugin settings --- 
; DESCRIPTION:
; User-defined aliases to execute plugins (scripts/tools/commands).
; KEYS:
; <alias> = <command>
[plugin]

; --- workspace settings --- 
; DESCRIPTION:
; User-defined spaces for working with blocks. Blocks must appear in the
; workspace's path to be recognized as downloaded. Multiple vendors can be
; configured to one workspace and vendors can be shared across workspaces. Block
; downloads and installations in one workspace are separate from those of
; another workspace.
; SECTIONS:
; [.<workspace>]
;     path = <path>
;     vendors = (<vndr0>, <vndr1>, ...)
[workspace]

; --- vendor settings --- 
; DESCRIPTION:
; Available vendors to be linked to workspaces. A vendor allows blocks to be
; visible from remote repositories and downloaded/installed across machines. If 
; a vendor is not configured to a remote repository, its value is empty.
; KEYS:
; <vendor-name> = <remote-repository-url>
[vendor]

; --- placeholders settings --- 
; DESCRIPTION:
; User-defined values to be replaced when referenced within '%' symbols in files
; created by legoHDL. Default placeholders include %AUTHOR% (name), %DATE%
; (date), %BLOCK% (block's identifier), and TEMPLATE (file's name).
; KEYS:
; <placeholder> = <value>
[placeholders]

; --- hdl-styling settings --- 
; DESCRIPTION:
; Configure how to print compatible HDL code.
[hdl-styling]

    ; DESCRIPTION:
    ; Determine if the closing ')' in component/instantiation code should be
    ; placed on its own line.
    ; VALUE:
    ; 'on' or 'off'
    hanging-end      = 

    ; DESCRIPTION:
    ; Determine if the proceeding character/symbol after identifiers should all 
    ; align together based on the longest identifier name. Used in conjunction
    ; with the 'alignment' key.
    ; VALUE:
    ; 'on' or 'off'
    auto-fit         = 

    ; DESCRIPTION:
    ; Determine the number of spaces (0 to 80) to proceed an identifier. Used in
    ; conjunction with the 'auto-fit' key.
    ; VALUE:
    ; 0 to 80
    alignment        = 

    ; DESCRIPTION:
    ; Determine if the indication code for a 'map' begins on a new line.
    ; VALUE:
    ; 'on' or 'off'
    newline-maps     = 

    ; DESCRIPTION:
    ; Select which HDL language (vhdl, verilog, or auto) is default to print
    ; compatible code. If 'auto' is selected, then the code is printed in the
    ; originally written language.
    ; VALUE:
    ; 'vhdl', 'verilog', or 'auto'
    default-language = 

    ; DESCRIPTION:
    ; The default instantiation name for a unit. Placeholders are supported.
    ; VALUE:
    ; <instance>
    instance-name    = 

    ; DESCRIPTION:
    ; The signal/wire identifier name to connect to the instantiated ports.
    ; Wildcard '*' will be replaced with each port's original identifier.
    ; VALUE:
    ; <pattern>
    port-modifier    = 

    ; DESCRIPTION:
    ; The constant/parameter identifier name to connect to the instantiated
    ; generics/parameters. Wildcard '*' will be replaced with each generics'
    ; original identifiers.
    ; VALUE:
    ; <pattern>
    generic-modifier = 

; --- metadata settings --- 
; DESCRIPTION:
; User-defined fields for Block.cfg files. These fields will be automatically
; copied into new Block.cfg files. Supports using placholders for key values.
; SECTIONS:
; [.<section>]
;     <key> = <value>
[metadata]
